---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "synthetic-checker.fullname" . }}
  labels:
    {{- include "synthetic-checker.labels" . | nindent 4 }}
    app: synthetic-checker
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "synthetic-checker.selectorLabels" . | nindent 6 }}
      app: synthetic-checker
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "synthetic-checker.selectorLabels" . | nindent 8 }}
        app: synthetic-checker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "synthetic-checker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.rbacProxy.enabled }}
        - name: kube-rbac-proxy
          image: "{{ .Values.rbacProxy.image.repository }}:{{ .Values.rbacProxy.image.tag }}"
          args:
          - "--secure-listen-address=0.0.0.0:8443"
          - "--upstream=http://127.0.0.1:{{ .Values.service.containerPort }}/"
          - "--config-file=/etc/kube-rbac-proxy/config-file.yaml"
          - "--logtostderr=true"
          - "--ignore-paths=/healthz,/status"
          - "--v=10"
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          volumeMounts:
            - name: rbac-proxy-config
              mountPath: /etc/kube-rbac-proxy
          securityContext:
            allowPrivilegeEscalation: false
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        {{- if or .Values.rbacProxy.enabled .Values.rbacProxy.clientSecret }}
          - name: RBAC_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rbacProxy.clientSecret | default (printf "%s-krp" (include "synthetic-checker.serviceAccountName" .)) }}
                key: token
        {{- end }}
          args:
            - start
            - --port {{ .Values.service.containerPort }}
            - --failed-status-code {{ .Values.statusCodes.failed }}
            - --degraded-status-code {{ .Values.statusCodes.degraded }}
          {{- if .Values.rbacProxy.enabled }}
            - --localhost-only
          {{- end }}
          {{- if .Values.exposeConfig }}
            - --expose-config
          {{- end }}
          {{- if and (or (gt (int .Values.replicaCount) 1) .Values.autoscaling.enabled) .Values.k8sLeaderElection }}
            - --k8s-leader-election
          {{- end }}
          {{- if .Values.watcher.ingresses }}
            - --watch-ingresses
          {{- end }}
          {{- with .Values.watcher.requiredLabel }}
            - --required-label={{ . }}
          {{- end }}
          {{- with .Values.watcher.namespaces }}
            - --namespaces={{ join "," . }}
          {{- end }}
          {{- if not .Values.rbacProxy.enabled }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.checks .Values.informer.upstreams }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.checks .Values.informer.upstreams .Values.configSources.downstreams .Values.rbacProxy.enabled }}
      volumes:
        {{- if or .Values.checks .Values.informer.upstreams .Values.configSources.downstreams }}
        - name: config-volume
          secret:
            secretName: {{ include "synthetic-checker.fullname" . }}
        {{- end }}
        {{- if .Values.rbacProxy.enabled }}
        - name: rbac-proxy-config
          configMap:
            name: {{ include "synthetic-checker.fullname" . }}-rbac-proxy
        {{- end }}
      {{- end }}
