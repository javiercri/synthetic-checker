# Default values for synthetic-checker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

checks:
  {}
  # Example:
  # httpChecks:
  #   stat503:
  #     url: https://httpstat.us/503
  #     interval: 10s
  #   stat200:
  #     url: https://httpstat.us/200
  #     interval: 10s
  #     initialDelay: 2s
  # dnsChecks:
  #   google:
  #     host: "www.google.com"
  #     interval: 15s
  # connChecks:
  #   cfDNS:
  #     address: "1.1.1.1:53"
  #     protocol: udp
  #     interval: 15s
  # k8sChecks:
  #   coredns: # a specific deployment
  #     kind: "Deployment.v1.apps"
  #     name: "coredns"
  #     namespace: "kube-system"
  #     interval: 20s
  #   nodes: # all the nodes
  #     kind: "Node.v1"
  #     interval: 30s
  #     initialDelay: 3s
  #   kube-api: # pods by label and namespace
  #     kind: "Pod.v1"
  #     namespace: "kube-system"
  #     labelSelector: "k8s-app=kube-apiserver"
  #     interval: 30s
  #     initialDelay: 4s
  #   monitoring-deployments: # all deployments in a namespace
  #     kind: "Deployment.v1.apps"
  #     namespace: "monitoring"
  #     interval: 30s
  #     initialDelay: 2s

informer:
  # when set to true, will prevent the checks from being executed in the local instance
  informOnly: false
  upstreams: []
  # - url: https://synthetic-checker.example.com

statusCodes:
  failed: 200
  degraded: 200

# set replicaCount > 1 and k8sLeaderElection to true to enable leader/follower HA mode
replicaCount: 1
k8sLeaderElection: false
watchIngresses: false
nodepinger: false

image:
  repository: synthetic-checker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 8080

prometheus:
  enabled: true
  endpoint: "metrics"
  port: 8080
  operator:
    enabled: false
    namespace: monitoring
    serviceMonitor:
      interval: 15s
      scrapeTimeout: 2s

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
